{"version":3,"sources":["Utils/LocalStorage.js","Components/Navigation.jsx","Components/Home/Wrapper.jsx","Components/MiniComponents/Optionalmg.jsx","Components/Discussion.jsx","Utils/HttpServices.js","Components/MiniComponents/PageLoader.jsx","Components/Discussions.jsx","Utils/Constant.js","Components/images/cheering2.png","Components/Home/Actions.jsx","Components/Home/Landing.jsx","Components/Home/PostReply.jsx","Components/Home/Post.jsx","Components/Home/Login.jsx","Components/Home/Register.jsx","Components/images/aboutme.png","Components/Home/MyAccount.jsx","Components/Notifications.jsx","Components/images/work.png","Components/Discover.jsx","Components/CreatePost.jsx","Components/Inbox.jsx","Components/UpdateProfile.jsx","Components/Profile.jsx","Components/Category.jsx","Components/images/error.png","Components/Verification.jsx","Components/UpdateProfileImage.jsx","App.js","reportWebVitals.js","index.js"],"names":["LocalDB","name","DB","window","localStorage","getItem","data","setItem","removeItem","Navigation","useState","user","setUser","useEffect","a","userDetails","retrieve","JSON","parse","logout","destroy","location","className","to","onClick","size","type","data-bs-toggle","data-bs-target","aria-controls","class","tabindex","id","aria-labelledby","data-bs-dismiss","aria-label","Wrapper","Component","component","Optionalmg","profileImg","console","log","style","width","height","borderRadius","borderWidth","borderColor","borderStyle","display","justifyContent","alignItems","marginRight","src","alt","details","image","backgroundColor","actions","cursor","like","color","dislike","Discussion","string","title","dangerouslySetInnerHTML","__html","content","slice","postSlug","marginTop","postedBy","likes","length","dislikes","replies","HttpServices","path","this","_data","token","axios","post","withCredentials","headers","auth","one","response","get","PageLoader","position","top","SpinnerRoundFilled","thickness","speed","Discussions","discussion","setDiscussions","loading","setLoading","posts","_posts","map","disc_","Endpoints","Actions","categories","setCategories","fetchCategories","request","res","marginLeft","cat","_id","Landing","PostReply","reply","setResponse","notification","setNotification","replyDate","placeholder","onChange","target","value","userID","Post","slug","useParams","setPost","setReply","replyMsg","setReplyMsg","totalLikes","setTotalLikes","setTotalDisLikes","http","postid","Likes","filter","action","DisLikes","alert","sendReply","e","preventDefault","req","status","setTimeout","postAction","post_","User","undefined","find","username","two","postDate","right","margin","onSubmit","htmlFor","required","Login","isLoading","setUserName","password","setPassword","Http","message","save","stringify","emailjs","init","Register","email","setEmail","CreateAccount","templateParams","to_name","link","code","to_email","from_title","send","options","padding","flexDirection","card","maxHeight","maxWidth","MyAccount","userPosts","setUserPosts","page","pageLoading","apiCall","getWithCred","result","getAccountPosts","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","date_joined","following","href","role","aria-selected","aboutme","aboutmeImg","overflowY","Notification","textAlign","Discover","imgg","modules","toolbar","header","list","indent","CreatePost","setContent","selectCat","setSelectedCat","setTitle","category","setCategory","saving","setSaving","savePost","marginBottom","disabled","Inbox","container","messages","read","rows","paddingTop","UpdateProfile","about","setAbout","aboutStatus","setAboutStatus","fetch","HttpService","updateAboutMe","Profile","textTransform","fontSize","Category","Verification","setStatus","verifying","setVerification","call","UpdateProfileImage","file","setFile","_image","setImage","fetchOnlyImage","updateProfileImage","files","reader","FileReader","readAsDataURL","onload","onerror","error","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f409cb9b.chunk.js","sourcesContent":["export default class LocalDB {\r\n  static retrieve(name) {\r\n    let DB = window.localStorage.getItem(name)\r\n    if (DB) return DB\r\n    else return null\r\n  }\r\n\r\n  static save(name, data) {\r\n    let DB = window.localStorage.setItem(name, data)\r\n    return DB\r\n  }\r\n\r\n  static destroy(name) {\r\n    let DB = window.localStorage.removeItem(name)\r\n  }\r\n  // save\r\n  // retrieve\r\n  // destroy\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Bell,\r\n  Edit3,\r\n  Home,\r\n  LogIn,\r\n  LogOut,\r\n  Menu,\r\n  Package,\r\n  Users,\r\n} from 'react-feather'\r\nimport './Style.css'\r\nimport LocalDB from './../Utils/LocalStorage'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigation = () => {\r\n  const [user, setUser] = useState('')\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      let userDetails = LocalDB.retrieve('x-yu-tox')\r\n      setUser(JSON.parse(userDetails))\r\n    })()\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    LocalDB.destroy('x-yu-tox')\r\n    window.location = '/'\r\n  }\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"logo\">\r\n        <span>Yoruba Community</span>\r\n      </div>\r\n      <div className=\"menus\">\r\n        <ul className=\"nav__menus\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/discover\">Discover</Link>\r\n          </li>\r\n        </ul>\r\n        {/* <form action=\"\">\r\n          <input placeholder=\"Search\" />\r\n        </form> */}\r\n\r\n        <ul className=\"nav__menus\">\r\n          <li>\r\n            <Link to=\"/notification\">\r\n              <div className=\"notification_area\">\r\n                <Bell />\r\n                <div className=\"bell_notification\"></div>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          {user ? (\r\n            <>\r\n              <li>\r\n                <Link to=\"/my-account\">My Account</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/new-post\" className=\"btn btn-warning\">\r\n                  New Post\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"#\" onClick={() => logout()}>\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <li>\r\n                <Link to=\"/new-post\" className=\"btn btn-warning\">\r\n                  New Post\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/login\">Login</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/register\">Register</Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <ul className=\"nav__menus_mobile\">\r\n          <li>\r\n            <Menu\r\n              size={32}\r\n              type=\"button\"\r\n              data-bs-toggle=\"offcanvas\"\r\n              data-bs-target=\"#offcanvasExample\"\r\n              aria-controls=\"offcanvasExample\"\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div\r\n        class=\"offcanvas offcanvas-start\"\r\n        tabindex=\"-1\"\r\n        id=\"offcanvasExample\"\r\n        aria-labelledby=\"offcanvasExampleLabel\"\r\n      >\r\n        <div class=\"offcanvas-header\">\r\n          <h5 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">\r\n            YORUBA COMMUNITY ONLINE\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close text-reset\"\r\n            data-bs-dismiss=\"offcanvas\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n        <div class=\"offcanvas-body\">\r\n          <ul>\r\n            <li>\r\n              <Link to={`/`}>\r\n                <Home size={19} /> Home\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`/discover`}>\r\n                <Package size={19} /> Discover\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`/notification`}>\r\n                <Bell size={19} /> Notifications\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`/new-post`}>\r\n                <Edit3 size={19} /> Create New Post\r\n              </Link>\r\n            </li>\r\n            {user && (\r\n              <>\r\n                <li>\r\n                  <Link to=\"/my-account\">\r\n                    <Users /> My Account\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"#\" onClick={() => logout()}>\r\n                    <LogOut size={19} /> Logout\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n            {!user && (\r\n              <>\r\n                <li>\r\n                  <Link to={`/login`}>\r\n                    <LogIn size={19} /> Login\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={`/register`}>Create Account</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from \"react\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nconst Wrapper = ({ component: Component }) => {\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Component />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react'\nimport { User } from 'react-feather'\n\nexport default function Optionalmg({ profileImg }) {\n  console.log(profileImg)\n  return (\n    <div\n      style={{\n        width: 40,\n        height: 40,\n        borderRadius: 50,\n        borderWidth: 1,\n        borderColor: '#000',\n        borderStyle: 'solid',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginRight: 10,\n      }}\n    >\n      {profileImg[0] ? (\n        <img\n          src={profileImg[0]}\n          alt=\"Profile Image\"\n          width={40}\n          height={40}\n          style={{ borderRadius: '100%' }}\n        />\n      ) : (\n        <User />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\r\nimport { MessageCircle, ThumbsDown, ThumbsUp } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport Optionalmg from './MiniComponents/Optionalmg'\r\n\r\nconst Discussion = ({ details }) => {\r\n  console.log('details : ', details)\r\n  const trimContent = (string) => {\r\n    return string.slice(0, 750)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"discussion_box\">\r\n            <h3>{details.title}</h3>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: trimContent(details.content) }}\r\n            ></div>\r\n            <Link to={`/${details.postSlug}`}>read more...</Link>\r\n            <div style={{ ...style.details, marginTop: 30 }}>\r\n              <div style={style.details}>\r\n                {details.image && <Optionalmg profileImg={details.image} />}\r\n\r\n                <span>\r\n                  <Link to={`/profile/${details.postedBy}`}>\r\n                    {details.postedBy}\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span style={{ ...style.actions, ...style.like }}>\r\n                  <ThumbsUp size={12} /> {details.likes.length}\r\n                </span>\r\n                <span style={{ ...style.actions, ...style.dislike }}>\r\n                  <ThumbsDown size={12} /> {details.dislikes.length}\r\n                </span>\r\n                <span style={style.actions}>\r\n                  <MessageCircle size={12} /> {details.replies.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-1\">{/* space */}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst style = {\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: 40,\r\n    height: 40,\r\n    backgroundColor: '#000',\r\n    borderRadius: 50,\r\n    marginRight: 10,\r\n  },\r\n  actions: {\r\n    width: 30,\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n  },\r\n  like: {\r\n    color: 'green',\r\n  },\r\n  dislike: {\r\n    color: 'red',\r\n  },\r\n}\r\n\r\nexport default Discussion\r\n","import axios from 'axios'\r\nimport LocalDB from './LocalStorage'\r\n\r\nexport default class HttpServices {\r\n  constructor(path) {\r\n    // this.path = 'http://localhost:3300/api/v1' + path\r\n    this.path = 'https://my-yoruba-comm.herokuapp.com/api/v1' + path\r\n    // https://my-yoruba-comm.herokuapp.com/\r\n  }\r\n\r\n  async post(_data) {\r\n    let token = JSON.parse(LocalDB.retrieve('x-yu-tox'))\r\n    try {\r\n      const { data } = await axios.post(\r\n        this.path,\r\n        { ..._data },\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            auth: token ? token.one : null,\r\n          },\r\n        },\r\n      )\r\n      return data\r\n    } catch (error) {\r\n      console.log(error)\r\n      return error.response.data\r\n    }\r\n  }\r\n\r\n  async get() {\r\n    try {\r\n      const { data } = await axios.get(this.path)\r\n      return data\r\n    } catch (error) {\r\n      return error.response.data\r\n    }\r\n  }\r\n\r\n  async getWithCred() {\r\n    let token = JSON.parse(LocalDB.retrieve('x-yu-tox'))\r\n    try {\r\n      const { data } = await axios.get(this.path, {\r\n        withCredentials: true,\r\n        headers: {\r\n          auth: token ? token.one : null,\r\n        },\r\n      })\r\n      return data\r\n    } catch (error) {\r\n      return error.response.data\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\nimport { SpinnerRoundFilled } from 'spinners-react'\n\nexport default function PageLoader() {\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#000000bd',\n        position: 'fixed',\n        top: 0,\n      }}\n    >\n      <SpinnerRoundFilled size={350} thickness={100} speed={50} color=\"#fff\" />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\r\nimport { Tag } from 'react-feather'\r\nimport Discussion from './Discussion'\r\nimport HttpServices from './../Utils/HttpServices'\r\nimport PageLoader from './MiniComponents/PageLoader'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Discussions = () => {\r\n  const [discussion, setDiscussions] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      let posts = new HttpServices('/posts/get-all-posts')\r\n      let _posts = await posts.post({})\r\n      setDiscussions(_posts)\r\n      setLoading(false)\r\n    })()\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"\">\r\n            <h4>\r\n              <Tag size={16} /> Threads & Discussions\r\n            </h4>\r\n            <hr />\r\n            <div className=\"discussion_wrapper\">\r\n              <div style={{ width: '100%' }}>\r\n                {loading ? (\r\n                  <div>\r\n                    <h5>Fetching Lastest Post!</h5>\r\n                    <p>Please Wait!!!</p>\r\n                  </div>\r\n                ) : discussion.length === 0 ? (\r\n                  <div>\r\n                    <h5>No Posts Found!</h5>\r\n                    <Link to=\"/new-post\">Be the first To write one!</Link>\r\n                  </div>\r\n                ) : (\r\n                  discussion.length !== 0 &&\r\n                  discussion.map((disc_) => <Discussion details={disc_} />)\r\n                )}\r\n              </div>\r\n              {/* sidebar */}\r\n              {/* <div>\r\n          <div className=\"card\">\r\n            <h4>\r\n              <User size={12} /> Suggestions For You\r\n            </h4>\r\n            <div className=\"mini_user_card\">\r\n              <div className=\"image\"></div>\r\n              <div>\r\n                <h6>Abiodun Mayowa</h6>\r\n              </div>\r\n              <button className=\"btn btn-follow\">\r\n                <User size={12} /> Follow\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h4>\r\n              <Calendar size={12} /> Upcoming Events\r\n            </h4>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Calendar size={174} />\r\n            </div>\r\n            <p style={{ textAlign: 'center' }}>No Events Found!!</p>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h4> Categories</h4>\r\n            <div className=\"sidebarcats\">\r\n              <div className=\"cats\">Family</div>\r\n              <div className=\"cats\">Politics</div>\r\n              <div className=\"cats\">Jobs</div>\r\n              <div className=\"cats\">Family</div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Discussions\r\n","export const Endpoints = {\n  FETCH_CATEGORIES: '/category/list-of-categories',\n  TEST: '/category/test',\n  CREATE_NEW_POST: '/posts/create-new-post',\n  REPLY_POST: '/posts/replypost',\n  POST_ACTION: '/posts/postactions',\n  USER_DATA: '/userauth/getuserinfo',\n  UPDATE_PROFILE: '/userauth/update-my-aboutme',\n  VERIFICATION: '/userauth/verify-account',\n  FETCH_ONLY_IMAGE: '/userauth/profile-image',\n  UPDATE_ONLY_IMAGE: '/userauth/update-profile-image',\n}\n","export default __webpack_public_path__ + \"static/media/cheering2.2dff6371.png\";","import React, { useState, useEffect } from 'react'\nimport { Calendar, List } from 'react-feather'\nimport HttpServices from '../../Utils/HttpServices'\nimport { Endpoints } from '../../Utils/Constant'\nimport { Link } from 'react-router-dom'\nimport image from '../../Components/images/cheering2.png'\n\nexport default function Actions() {\n  const [categories, setCategories] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const fetchCategories = async () => {\n    const request = new HttpServices(Endpoints.FETCH_CATEGORIES)\n    let res = await request.get()\n    setCategories(res)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  return (\n    <div className=\"container-fluid mb-5\">\n      <div className=\"row\">\n        <div className=\"col-md-12\" style={{ position: 'relative' }}>\n          <img src={image} alt=\"\" style={{ width: '100%' }} />\n          <div style={{ position: 'absolute', top: '45%' }}>\n            <h1 className=\"topBannerText\">A community of love and unity!</h1>\n            <div style={{ marginLeft: 120 }}>\n              <hr\n                style={{\n                  borderColor: '#fff',\n                  borderWidth: 1,\n                  borderStyle: 'solid',\n                }}\n              />\n              {/* <Link to=\"/login\" className=\"btn btn-xs btn-success\">\n                Login\n              </Link>{' '}\n              <Link to=\"/register\" className=\"btn btn-xs btn-warning\">\n                Create Account\n              </Link> */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div className=\"banner\">\n            <div class=\"card\">\n              <div class=\"card-body scroll-cards\">\n                <h5 class=\"card-title cardHeaders\">\n                  <Calendar className=\"svgs_\" /> Upcoming Events\n                </h5>\n                <hr />\n                {/* <p class=\"card-text\">\n                With supporting text below as a natural lead-in to additional\n                content.\n              </p>\n              <a href=\"#\" class=\"btn btn-primary\">\n                Go somewhere\n              </a> */}\n                <div className=\"cardFlex\">\n                  <Calendar size={92} />\n                  <p>There are no new events at the moment!</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div className=\"banner\">\n            <div class=\"card\">\n              <div class=\"card-body scroll-cards\">\n                <h5 class=\"card-title cardHeaders\">\n                  <List className=\"svgs_\" /> Categories\n                </h5>\n                <hr />\n                {/* <p class=\"card-text\">\n                With supporting text below as a natural lead-in to additional\n                content.\n              </p>\n              <a href=\"#\" class=\"btn btn-primary\">\n                Go somewhere\n              </a> */}\n                <div className=\"cardFlex rowCard\">\n                  {loading ? (\n                    <p>Fetching Exisiting Categories</p>\n                  ) : (\n                    categories.map((cat) => (\n                      <Link key={cat._id} to={`/category/${cat.title}`}>\n                        {cat.title}\n                      </Link>\n                    ))\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport TrendingLayer from '../TrendingLayer'\r\nimport Discussions from './../Discussions'\r\nimport Actions from './Actions'\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* <TrendingLayer /> */}\r\n      <Actions />\r\n      <Discussions />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing\r\n","import React, { useState } from 'react'\r\nimport LocalDB from './../../Utils/LocalStorage'\r\nimport HttpServices from './../../Utils/HttpServices'\r\n\r\nconst PostReply = ({ reply }) => {\r\n  const [response, setResponse] = useState('')\r\n  const [notification, setNotification] = useState('')\r\n\r\n  const sendResponse = () => {\r\n    const userID = LocalDB.retrieve('x-yu-tox')\r\n    if (!userID) window.location = '/'\r\n    else if (response.length === 0) {\r\n      setNotification('You have not written your response!!!')\r\n    } else {\r\n      let response = new HttpServices('/posts/replypost')\r\n      response.post({ response, userID })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"post_replies\">\r\n      <h4>\r\n        {reply.user} - {reply.replyDate}.\r\n      </h4>\r\n\r\n      <p>{reply.reply}</p>\r\n      <textarea\r\n        placeholder=\"Reply...\"\r\n        onChange={({ target }) => setResponse(target.value)}\r\n      >\r\n        {response}\r\n      </textarea>\r\n      {notification && <p>{notification}</p>}\r\n      <button className=\"btn btn-success btn-xs\" onClick={sendResponse}>\r\n        reply\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostReply\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Styles/Post.css'\r\nimport { AlertCircle, ThumbsUp } from 'react-feather'\r\nimport { ThumbsDown, Calendar } from 'react-feather'\r\nimport { MessageCircle } from 'react-feather'\r\nimport { useParams } from 'react-router'\r\nimport HttpServices from './../../Utils/HttpServices'\r\nimport PostReply from './PostReply'\r\nimport LocalDB from './../../Utils/LocalStorage'\r\nimport { Endpoints } from '../../Utils/Constant.js'\r\nimport PageLoader from '../MiniComponents/PageLoader'\r\n\r\nconst Post = () => {\r\n  const { slug } = useParams()\r\n  const [loading, setLoading] = useState(true)\r\n  const [post, setPost] = useState({})\r\n\r\n  const [reply, setReply] = useState('')\r\n  const [replyMsg, setReplyMsg] = useState('')\r\n\r\n  const [totalLikes, setTotalLikes] = useState(0)\r\n  const [totalDisLikes, setTotalDisLikes] = useState(0)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      let http = new HttpServices('/posts/readposts')\r\n      let response = await http.post({ postid: slug })\r\n      if (response) {\r\n        setPost(response)\r\n        let Likes = response.actions.filter(\r\n          (action) => action.action === 'like',\r\n        )\r\n        let DisLikes = response.actions.filter(\r\n          (action) => action.action === 'like',\r\n        )\r\n        setTotalLikes(Likes.length)\r\n        setTotalDisLikes(DisLikes.length)\r\n      } else alert('Post Not Found!')\r\n\r\n      setLoading(false)\r\n    })()\r\n  }, [slug])\r\n\r\n  const sendReply = async (e) => {\r\n    e.preventDefault()\r\n    if (!reply) setReplyMsg('You Must Send An Reply!')\r\n    if (!LocalDB.retrieve('x-yu-tox')) setReplyMsg('You Must Be Logged In!')\r\n    else {\r\n      const req = new HttpServices(Endpoints.REPLY_POST)\r\n      const res = await req.post({ reply, postid: post._id })\r\n      if (res.status === 'failed')\r\n        setReplyMsg('Authentication Failed! Pls login again!!')\r\n      else setReplyMsg('reply sent!!!')\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setReplyMsg('')\r\n    }, 2000)\r\n  }\r\n\r\n  const postAction = async (action, post_) => {\r\n    console.log(action, post_)\r\n    // -> check that the person hasn't taken any action...\r\n    let User = JSON.parse(LocalDB.retrieve('x-yu-tox'))\r\n    let isExists = post.actions.find((user) => user.username === User.two)\r\n    if (isExists === undefined) return\r\n    else {\r\n      let req = new HttpServices(Endpoints.POST_ACTION)\r\n      let res = await req.post({ action, post: post_ })\r\n      console.log(res)\r\n    }\r\n  }\r\n\r\n  if (loading) return <PageLoader />\r\n\r\n  if (!post) return <h4>Post Not Found!</h4>\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-7 user_post bg-white\"\r\n            style={{ position: 'relative' }}\r\n          >\r\n            <h4>{post.title}</h4>\r\n            <div className=\"post_user_details\">\r\n              <span>Posted By {post.postedBy}.</span> <Calendar size={12} />{' '}\r\n              {post.postDate}\r\n              <div\r\n                style={{ position: 'absolute', top: 0, right: 0, margin: 20 }}\r\n              >\r\n                {<AlertCircle size={17} color=\"red\" />}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div dangerouslySetInnerHTML={{ __html: post.content }}></div>\r\n            <div className=\"interactions\">\r\n              <div onClick={() => postAction('like', post.postSlug)}>\r\n                <ThumbsUp size={13} /> {totalLikes}\r\n              </div>\r\n              <div onClick={() => postAction('dislike', post.postSlug)}>\r\n                <ThumbsDown size={13} /> {post.dislikes.length}\r\n              </div>\r\n              <div>\r\n                <MessageCircle size={13} /> {post.replies.length}\r\n              </div>\r\n            </div>\r\n            <form action=\"\" onSubmit={sendReply}>\r\n              <label htmlFor=\"\">Post Your Reply : </label>\r\n              <textarea\r\n                placeholder=\"Post your comment here ...\"\r\n                value={reply}\r\n                required\r\n                onChange={({ target: { value } }) => setReply(value)}\r\n              ></textarea>\r\n              {replyMsg && (\r\n                <div className=\"alert alert-secondary text-center\">\r\n                  {replyMsg}\r\n                </div>\r\n              )}\r\n              <button className=\"btn btn-success btn-lg\">Reply</button>{' '}\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-1\"></div>\r\n          <div className=\"col-md-4 p-3 bg-white border border-primary\">\r\n            <h4>\r\n              <MessageCircle size={12} /> Replies ({post.replies.length}).\r\n            </h4>\r\n            <hr />\r\n            {post.replies.length === 0 && <h4>No Replies</h4>}\r\n            {post.replies.map((reply) => (\r\n              <PostReply reply={reply} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState } from 'react'\r\nimport { Key, User } from 'react-feather'\r\nimport './Styles/Login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport HttpServices from './../../Utils/HttpServices'\r\nimport LocalDB from './../../Utils/LocalStorage'\r\n\r\nconst Login = () => {\r\n  const [loading, isLoading] = useState('')\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const Login = async (e) => {\r\n    e.preventDefault()\r\n    isLoading(\r\n      <div className=\"alert alert-warning\">Checking Your Credentials ... </div>,\r\n    )\r\n    let Http = new HttpServices('/userauth/user-login')\r\n    let response = await Http.post({ username, password })\r\n    console.log('respose', response)\r\n    if (response.status === 'failed') {\r\n      isLoading(\r\n        <div className=\"alert alert-danger text-center\">\r\n          {response.message}\r\n        </div>,\r\n      )\r\n    } else {\r\n      isLoading(\r\n        <div className=\"alert alert-success text-center\">\r\n          Login Successful!\r\n        </div>,\r\n      )\r\n      //   create session and redirect!\r\n      LocalDB.save(\r\n        'x-yu-tox',\r\n        JSON.stringify({ one: response.token, two: response.username }),\r\n      )\r\n      window.location = '/'\r\n    }\r\n\r\n    setTimeout(() => isLoading(''), 10000)\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-4 bg-white p-4\">\r\n            <form action=\"\" className=\"_form\" onSubmit={Login}>\r\n              <h6>Login</h6>\r\n              <hr />\r\n              <p>Connect With Friends and Family...</p>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"\">\r\n                  <User size={12} /> Enter Your Username :{' '}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  className=\"form-control form-control-lg\"\r\n                  required\r\n                  onChange={({ target }) => setUserName(target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"\">\r\n                  <Key size={12} /> Enter Your Password :{' '}\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  className=\"form-control form-control-lg\"\r\n                  onChange={({ target }) => setPassword(target.value)}\r\n                />\r\n              </div>\r\n\r\n              {loading && <div>{loading}</div>}\r\n              <div>\r\n                <button className=\"btn btn-success btn-lg btn-block\">\r\n                  Login\r\n                </button>\r\n\r\n                <Link to=\"/register\" className=\"btn btn-link\">\r\n                  CREATE AN ACCOUNT\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { Key, Mail, User } from 'react-feather'\r\nimport './Styles/Login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport HttpServices from './../../Utils/HttpServices'\r\nimport emailjs from 'emailjs-com'\r\nemailjs.init('user_hDRqbIr7jiCYaY0MRuHiZ')\r\n\r\nconst Register = () => {\r\n  const [loading, isLoading] = useState('')\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const CreateAccount = async (e) => {\r\n    e.preventDefault()\r\n    isLoading(\r\n      <div className=\"alert alert-warning\">Saving Your Information ... </div>,\r\n    )\r\n    let Http = new HttpServices('/userauth/create-new-account')\r\n    let response = await Http.post({ username, password, email })\r\n\r\n    if (!response.status) {\r\n      isLoading(\r\n        <div className=\"alert alert-danger text-center\">\r\n          {response.message}\r\n        </div>,\r\n      )\r\n    } else {\r\n      let templateParams = {\r\n        to_name: username,\r\n        link: `https://sulsugbest.com/verify-account/${response.code}`,\r\n        to_email: email,\r\n        from_title: 'Yoruba Community',\r\n      }\r\n\r\n      await emailjs.send('service_bk99p7k', 'template_0mnax1b', templateParams)\r\n      isLoading(\r\n        <div className=\"alert alert-success text-center\">\r\n          Account Created! Check Your Email To Verify!!\r\n        </div>,\r\n      )\r\n      //   create session and redirect!\r\n    }\r\n\r\n    setTimeout(() => isLoading(''), 2000)\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-4 bg-white p-4\">\r\n            <form action=\"\" className=\"_form\" onSubmit={CreateAccount}>\r\n              <h6 className=\"text-center\">Create An Account.</h6>\r\n              <hr />\r\n              {/* <p>Connect With Friends and Family...</p> */}\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"\">\r\n                  <User size={12} /> Enter Your Username :{' '}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  required\r\n                  onChange={({ target }) => setUserName(target.value)}\r\n                  className=\"form-control form-control-lg\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"\">\r\n                  <Mail size={12} /> Enter Your Email :{' '}\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  required\r\n                  onChange={({ target }) => setEmail(target.value)}\r\n                  className=\"form-control form-control-lg\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"\">\r\n                  <Key size={12} /> Enter Your Password :{' '}\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  onChange={({ target }) => setPassword(target.value)}\r\n                  className=\"form-control form-control-lg\"\r\n                />\r\n              </div>\r\n\r\n              {loading && <div>{loading}</div>}\r\n              <div className=\"row justify-content-between\">\r\n                <div className=\"col-4\">\r\n                  <button className=\"btn btn-xs btn-success btn-block\">\r\n                    Join Us\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <Link to=\"/login\" className=\"btn btn-link\">\r\n                    LOGIN\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","export default __webpack_public_path__ + \"static/media/aboutme.facf97b1.png\";","import React, { useState, useEffect } from 'react'\r\nimport { User, Clipboard, Users, Edit2, UserPlus } from 'react-feather'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport HttpServices from './../../Utils/HttpServices'\r\nimport aboutmeImg from './../../Components/images/aboutme.png'\r\nimport Discussion from '../Discussion'\r\nimport PageLoader from '../MiniComponents/PageLoader'\r\n\r\nconst MyAccount = () => {\r\n  const [userPosts, setUserPosts] = useState([])\r\n  const [user, setUser] = useState([])\r\n  const [page, pageLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      let apiCall = new HttpServices('/userauth/getuserinfo')\r\n      let res = await apiCall.getWithCred()\r\n      if (res.status === 'success') setUser(res.result)\r\n      pageLoading(false)\r\n    })()\r\n  }, [])\r\n\r\n  const getAccountPosts = async () => {\r\n    let req = new HttpServices('/posts/getuserposts')\r\n    let res = await req.getWithCred()\r\n    if (res.status === 'success') setUserPosts(res.result)\r\n    console.log(res)\r\n  }\r\n\r\n  if (page) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h4>My Profile.</h4>\r\n      <hr />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card1 card_responsive\" style={style.card}>\r\n              <div className=\"image image_lg\">\r\n                {user.profileImg ? (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        backgroundImage: `url(${user.profileImg})`,\r\n                        width: 200,\r\n                        height: 200,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        borderRadius: 50,\r\n                      }}\r\n                    ></div>\r\n                    <Link to=\"/update-profile-image\">Update Image</Link>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div>\r\n                      <User size={50} />\r\n                    </div>\r\n                    <Link to=\"/update-profile-image\">Update Image</Link>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <h2>{user.username}.</h2>\r\n              <h6>Joined : {user.date_joined}</h6>\r\n              <h6>\r\n                <User /> Following : {user.following.length}\r\n              </h6>\r\n              <a href=\"/update-profile\" className=\"btn btn-success btn-lg mt-5\">\r\n                <Edit2 /> Update Profile\r\n              </a>\r\n              {/* \r\n              Todo\r\n              - edit profile, about me, \r\n              - add upload profile image.\r\n              - show list of followers.\r\n              - show list of follows.\r\n              - my posts\r\n              - my replies\r\n              - \r\n            */}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <nav>\r\n              <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                <button\r\n                  class=\"nav-link active\"\r\n                  id=\"nav-home-tab\"\r\n                  data-bs-toggle=\"tab\"\r\n                  data-bs-target=\"#nav-home\"\r\n                  type=\"button\"\r\n                  role=\"tab\"\r\n                  aria-controls=\"nav-home\"\r\n                  aria-selected=\"true\"\r\n                >\r\n                  <User /> About Me\r\n                </button>\r\n                <button\r\n                  class=\"nav-link\"\r\n                  id=\"nav-profile-tab\"\r\n                  data-bs-toggle=\"tab\"\r\n                  data-bs-target=\"#nav-profile\"\r\n                  type=\"button\"\r\n                  role=\"tab\"\r\n                  aria-controls=\"nav-profile\"\r\n                  aria-selected=\"false\"\r\n                  onClick={() => getAccountPosts()}\r\n                >\r\n                  <Clipboard /> My Posts\r\n                </button>\r\n                <button\r\n                  class=\"nav-link\"\r\n                  id=\"nav-contact-tab\"\r\n                  data-bs-toggle=\"tab\"\r\n                  data-bs-target=\"#nav-contact\"\r\n                  type=\"button\"\r\n                  role=\"tab\"\r\n                  aria-controls=\"nav-contact\"\r\n                  aria-selected=\"false\"\r\n                >\r\n                  <Users /> My Friends\r\n                </button>\r\n              </div>\r\n            </nav>\r\n            <div class=\"tab-content\" id=\"nav-tabContent\">\r\n              <div\r\n                class=\"tab-pane fade show active\"\r\n                id=\"nav-home\"\r\n                role=\"tabpanel\"\r\n                aria-labelledby=\"nav-home-tab\"\r\n              >\r\n                <div style={style.options}>\r\n                  {user.aboutme ? (\r\n                    <div>{user.aboutme}</div>\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"text-center\">\r\n                        You haven't updated your ABOUT ME information.\r\n                      </h3>\r\n                      <p className=\"text-center\">\r\n                        C'mon! Tell others about yourself{' '}\r\n                        <Link to=\"/update-profile\">here</Link>!\r\n                      </p>\r\n                      <img src={aboutmeImg} style={style.image} />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"tab-pane fade\"\r\n                id=\"nav-profile\"\r\n                role=\"tabpanel\"\r\n                aria-labelledby=\"nav-profile-tab\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    backgroundColor: '#fff',\r\n                    overflowY: 'scroll',\r\n                    padding: 12,\r\n                  }}\r\n                >\r\n                  {userPosts.length === 0 ? (\r\n                    <div>\r\n                      <p>No Posts Found!</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      {userPosts.map((post) => (\r\n                        <Discussion details={post} />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"tab-pane fade\"\r\n                id=\"nav-contact\"\r\n                role=\"tabpanel\"\r\n                aria-labelledby=\"nav-contact-tab\"\r\n              >\r\n                <div style={style.options}>\r\n                  {/* user friends */}\r\n                  {/* state 1 - no friends */}\r\n                  {/* state 2 - show friends */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet style = {\r\n  options: {\r\n    backgroundColor: '#fff',\r\n    height: 550,\r\n    padding: 40,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  card: {\r\n    height: 600,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    maxHeight: '70%',\r\n    maxWidth: '70%',\r\n  },\r\n}\r\n\r\nexport default MyAccount\r\n","import React from 'react'\r\nconst Notification = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h4 style={{ textAlign: 'center' }}>Your Notifications.</h4>\r\n      <div className=\"notificationArea\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"notice\">\r\n                <p>\r\n                  <strong>Mayowa</strong> liked your post.\r\n                </p>\r\n                <p className=\"timeAgo\">3hours ago.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"notice\">\r\n                <p>\r\n                  <strong>Mayowa</strong> liked your post.\r\n                </p>\r\n                <p className=\"timeAgo\">3hours ago.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","export default __webpack_public_path__ + \"static/media/work.b7eed851.png\";","import React from 'react'\r\nimport imgg from './images/work.png'\r\n\r\nconst Discover = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* <h4>Discover</h4> */}\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <img src={imgg} alt=\"logo\" style={{ maxWidth: '100%' }} />\r\n            <p style={{ textAlign: 'center' }}>No Discoveries Found!!!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Discover\r\n","import React, { useState, useEffect } from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport HttpServices from '../Utils/HttpServices'\r\nimport { Endpoints } from './../Utils/Constant'\r\n\r\nlet modules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [\r\n      { list: 'ordered' },\r\n      { list: 'bullet' },\r\n      { indent: '-1' },\r\n      { indent: '+1' },\r\n    ],\r\n    ['link', 'image'],\r\n    ['clean'],\r\n  ],\r\n}\r\n\r\nconst CreatePost = () => {\r\n  const [content, setContent] = useState('')\r\n  const [selectCat, setSelectedCat] = useState('')\r\n  const [title, setTitle] = useState('')\r\n\r\n  const [category, setCategory] = useState([])\r\n  const [saving, setSaving] = useState('')\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      let req = new HttpServices(Endpoints.FETCH_CATEGORIES)\r\n      let res = await req.get()\r\n      setCategory(res)\r\n    })()\r\n  }, [])\r\n\r\n  const savePost = async (e) => {\r\n    e.preventDefault()\r\n    setSaving('Saving Your Post ...')\r\n    let req = new HttpServices(Endpoints.CREATE_NEW_POST)\r\n    let res = await req.post({ title, content, category: selectCat })\r\n    if (res.status) setSaving('You are not logged in!')\r\n    else setSaving('New Post Created Successfully')\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n              <h4>Create New Post</h4>\r\n              <hr />\r\n              <div className=\"new_post_form\">\r\n                <form action=\"\" onSubmit={savePost}>\r\n                  <div className=\"form-group mb-4\">\r\n                    <label htmlFor=\"\">Title</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Title\"\r\n                      className=\"form-control form-control-lg\"\r\n                      onChange={({ target: { value } }) => setTitle(value)}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-4\">\r\n                    <label htmlFor=\"\">Categories</label>\r\n                    <select\r\n                      className=\"form-control form-control-lg\"\r\n                      onChange={({ target: { value } }) =>\r\n                        setSelectedCat(value)\r\n                      }\r\n                      required\r\n                    >\r\n                      <option>-- SELECT YOUR POST'S CATEGORY --</option>\r\n                      {category.map((cat) => (\r\n                        <option key={cat._id}>{cat.title}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"\">Add your content :</label>\r\n                    <ReactQuill\r\n                      value={content}\r\n                      modules={modules}\r\n                      onChange={(e) => setContent(e)}\r\n                      style={{\r\n                        height: 230,\r\n                        marginBottom: 70,\r\n                        backgroundColor: '#fff',\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  {saving && (\r\n                    <div className=\"alert alert-warning text-center\">\r\n                      {saving}\r\n                    </div>\r\n                  )}\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    disabled={saving ? true : false}\r\n                  >\r\n                    Submit Post\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","import React from 'react'\n\nexport default function Inbox() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-10 bg-white\" style={style.container}>\n            <div className=\"row\">\n              <div className=\"col-3\" style={style.messages}>\n                <div style={style.message}></div>\n                <div style={style.message}></div>\n                <div style={style.message}></div>\n                <div style={style.message}></div>\n                <div style={style.message}></div>\n                <div style={style.message}></div>\n                <div style={style.message}></div>\n              </div>\n              <div className=\"col-9\">\n                <div style={style.read}></div>\n                <textarea\n                  name=\"\"\n                  className=\"form-control\"\n                  rows=\"3\"\n                  placeholder=\"Type Your Reply ...\"\n                ></textarea>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst style = {\n  container: {\n    height: 650,\n    padding: 30,\n  },\n  messages: {\n    backgroundColor: '#f6f6f6',\n    height: 550,\n    paddingTop: 20,\n    overflowY: 'scroll',\n    borderWidth: 1,\n    borderColor: 'blue',\n    borderStyle: '#282889',\n  },\n  message: {\n    backgroundColor: '#fff',\n    height: 100,\n    marginBottom: 10,\n    borderRadius: 5,\n  },\n  read: {\n    height: 450,\n    backgroundColor: '#f6f6f6',\n    marginBottom: 10,\n  },\n}\n","import React, { useState, useEffect } from 'react'\nimport { Lock, UserCheck } from 'react-feather'\nimport { Endpoints } from '../Utils/Constant'\nimport HttpService from '../Utils/HttpServices'\n\nexport default function UpdateProfile() {\n  const [about, setAbout] = useState('')\n  const [aboutStatus, setAboutStatus] = useState('')\n  useEffect(() => {\n    fetch()\n  }, [])\n\n  const fetch = async () => {\n    let request = new HttpService(Endpoints.USER_DATA)\n    let response = await request.getWithCred()\n    if (response.status === 'success') setAbout(response.result.aboutme)\n  }\n\n  // update about me\n  const updateAboutMe = async (e) => {\n    e.preventDefault()\n    setAboutStatus('Updating Your Profile...')\n    let request = new HttpService(Endpoints.UPDATE_PROFILE)\n    let response = await request.post({ aboutme: about })\n    setAboutStatus('Update Successful!')\n    window.location = '/my-account'\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <h4>\n              <Lock /> Update your password\n            </h4>\n            <hr />\n            <form action=\"\">\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">Old Password:</label>\n                <input type=\"text\" className=\"form-control form-control-lg\" />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">New Password:</label>\n                <input type=\"text\" className=\"form-control form-control-lg\" />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">Repeat Password:</label>\n                <input type=\"text\" className=\"form-control form-control-lg\" />\n              </div>\n              <button className=\"btn btn-success btn-lg\">\n                Update Password\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <h4>\n              <UserCheck /> Tell others about you.\n            </h4>\n            <hr />\n            <form action=\"\" onSubmit={updateAboutMe}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">Write About Yourself Here :</label>\n                <textarea\n                  name=\"\"\n                  id=\"\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                  onChange={({ target: { value } }) => setAbout(value)}\n                  required\n                >\n                  {about}\n                </textarea>\n              </div>\n              {aboutStatus && (\n                <div className=\"alert alert-warning text-center\">\n                  {aboutStatus}\n                </div>\n              )}\n              <button className=\"btn btn-success btn-lg\">Update Info</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { User, Clipboard, Users, Edit2, UserPlus } from 'react-feather'\nimport { useParams, Link } from 'react-router-dom'\n\nimport HttpServices from '../Utils/HttpServices'\nimport aboutmeImg from '../Components/images/aboutme.png'\nimport Discussion from './Discussion'\nimport PageLoader from './MiniComponents/PageLoader'\n\nexport default function Profile() {\n  const { username } = useParams()\n  const [userPosts, setUserPosts] = useState([])\n  const [user, setUser] = useState([])\n  const [page, pageLoading] = useState(true)\n\n  useEffect(() => {\n    ;(async () => {\n      let apiCall = new HttpServices(`/userauth/getuserinfo/${username}`)\n      let res = await apiCall.getWithCred()\n      if (res.status === 'success') setUser(res.result)\n      pageLoading(false)\n    })()\n  }, [username])\n\n  const getAccountPosts = async () => {\n    let req = new HttpServices(`/posts/getuserposts/${username}`)\n    let res = await req.getWithCred()\n    if (res.status === 'success') setUserPosts(res.result)\n  }\n\n  if (page) {\n    return <PageLoader />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h4\n        style={{\n          textTransform: 'capitalize',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        About {username}.\n        <span style={{ color: '#abadb1', fontSize: 12, marginLeft: 10 }}>\n          <Link to=\"/\">- follow</Link>\n        </span>\n      </h4>\n      <hr />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <div className=\"card1 card_responsive\" style={style.card}>\n              <div className=\"image image_lg\">\n                <div>\n                  <UserPlus size={50} />\n                </div>\n                <Link>Update Profile</Link>\n              </div>\n              <h2 style={{ textTransform: 'capitalize' }}>{user.username}.</h2>\n              <h6>Joined : {user.date_joined}</h6>\n              {/* <h6>Total Posts : 40</h6>\n                <h6>Total Replies : 40</h6> */}\n              <hr />\n              <h6>\n                <User /> Following : {user.following.length}\n              </h6>\n              {/* \n                  Todo\n                  - edit profile, about me, \n                  - add upload profile image.\n                  - show list of followers.\n                  - show list of follows.\n                  - my posts\n                  - my replies\n                  - \n                */}\n            </div>\n          </div>\n          <div className=\"col-md-9\">\n            <nav>\n              <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                <button\n                  class=\"nav-link active\"\n                  id=\"nav-home-tab\"\n                  data-bs-toggle=\"tab\"\n                  data-bs-target=\"#nav-home\"\n                  type=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"nav-home\"\n                  aria-selected=\"true\"\n                >\n                  <User /> About Me\n                </button>\n                <button\n                  class=\"nav-link\"\n                  id=\"nav-profile-tab\"\n                  data-bs-toggle=\"tab\"\n                  data-bs-target=\"#nav-profile\"\n                  type=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"nav-profile\"\n                  aria-selected=\"false\"\n                  onClick={() => getAccountPosts()}\n                >\n                  <Clipboard /> My Posts\n                </button>\n                <button\n                  class=\"nav-link\"\n                  id=\"nav-contact-tab\"\n                  data-bs-toggle=\"tab\"\n                  data-bs-target=\"#nav-contact\"\n                  type=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"nav-contact\"\n                  aria-selected=\"false\"\n                >\n                  <Users /> My Friends\n                </button>\n              </div>\n            </nav>\n            <div class=\"tab-content\" id=\"nav-tabContent\">\n              <div\n                class=\"tab-pane fade show active\"\n                id=\"nav-home\"\n                role=\"tabpanel\"\n                aria-labelledby=\"nav-home-tab\"\n              >\n                <div style={style.options}>\n                  {user.aboutme ? (\n                    <div>{user.aboutme}</div>\n                  ) : (\n                    <>\n                      <h3 className=\"text-center\">\n                        {username}'s profile hasn't been updated!\n                      </h3>\n                      <img src={aboutmeImg} style={style.image} />\n                    </>\n                  )}\n                </div>\n              </div>\n              <div\n                class=\"tab-pane fade\"\n                id=\"nav-profile\"\n                role=\"tabpanel\"\n                aria-labelledby=\"nav-profile-tab\"\n              >\n                <div\n                  style={{\n                    backgroundColor: '#f6f6f6',\n                    overflowY: 'scroll',\n                    padding: 12,\n                  }}\n                >\n                  {userPosts.length === 0 ? (\n                    <div>\n                      <p>No Posts Found!</p>\n                    </div>\n                  ) : (\n                    <div>\n                      {userPosts.map((post) => (\n                        <Discussion details={post} />\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div\n                class=\"tab-pane fade\"\n                id=\"nav-contact\"\n                role=\"tabpanel\"\n                aria-labelledby=\"nav-contact-tab\"\n              >\n                <div style={style.options}>\n                  {/* user friends */}\n                  {/* state 1 - no friends */}\n                  {/* state 2 - show friends */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nlet style = {\n  options: {\n    backgroundColor: '#f6f6f6',\n    height: 550,\n    padding: 40,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    position: 'relative',\n  },\n  card: {\n    height: 600,\n    width: '100%',\n  },\n  image: {\n    maxHeight: '70%',\n    maxWidth: '70%',\n  },\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport PageLoader from './MiniComponents/PageLoader'\nimport HttpServices from '../Utils/HttpServices'\nimport { Tag } from 'react-feather'\nimport Discussion from './Discussion'\n\nexport default function Category() {\n  let { category } = useParams()\n  const [loading, setLoading] = useState(true)\n  const [discussion, setDiscussions] = useState([])\n\n  useEffect(() => {\n    ;(async () => {\n      let posts = new HttpServices('/posts/get-all-posts')\n      let _posts = await posts.post({ category })\n      setDiscussions(_posts)\n    })()\n\n    setLoading(false)\n  }, [])\n\n  if (loading) {\n    return <PageLoader />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <div className=\"\">\n              <h4>\n                <Tag size={16} /> Threads & Discussions - {category}\n              </h4>\n              <hr />\n              <div className=\"discussion_wrapper\">\n                <div style={{ width: '100%' }}>\n                  {discussion.length === 0 && (\n                    // <div\n                    //   style={{\n                    //     backgroundColor: '#fff',\n                    //     marginRight: 50,\n                    //     padding: 50,\n                    //   }}\n                    // >\n                    //   <ContentLoader\n                    //     speed={15}\n                    //     width={500}\n                    //     height={260}\n                    //     viewBox=\"0 0 500 260\"\n                    //     backgroundColor=\"#575e8199\"\n                    //     foregroundColor=\"#000\"\n                    //   >\n                    //     <rect x=\"48\" y=\"8\" rx=\"3\" ry=\"3\" width=\"88\" height=\"16\" />\n                    //     <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n                    //     <rect\n                    //       x=\"0\"\n                    //       y=\"56\"\n                    //       rx=\"3\"\n                    //       ry=\"3\"\n                    //       width=\"410\"\n                    //       height=\"14\"\n                    //     />\n                    //     <rect\n                    //       x=\"0\"\n                    //       y=\"56\"\n                    //       rx=\"3\"\n                    //       ry=\"3\"\n                    //       width=\"410\"\n                    //       height=\"12\"\n                    //     />\n                    //     <rect\n                    //       x=\"0\"\n                    //       y=\"56\"\n                    //       rx=\"3\"\n                    //       ry=\"3\"\n                    //       width=\"410\"\n                    //       height=\"10\"\n                    //     />\n                    //     <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"8\" />\n                    //     <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n                    //     <rect\n                    //       x=\"0\"\n                    //       y=\"188\"\n                    //       rx=\"15\"\n                    //       ry=\"3\"\n                    //       width=\"178\"\n                    //       height=\"16\"\n                    //     />\n                    //     <circle cx=\"20\" cy=\"20\" r=\"20\" />\n                    //   </ContentLoader>\n                    // </div>\n                    <div>\n                      <h5>No Posts Found!</h5>\n                      <Link to=\"/new-post\">Be the first To write one!</Link>\n                    </div>\n                  )}\n                  {discussion.length !== 0 &&\n                    discussion.map((disc_) => <Discussion details={disc_} />)}\n                </div>\n                {/* sidebar */}\n                {/* <div>\n          <div className=\"card\">\n            <h4>\n              <User size={12} /> Suggestions For You\n            </h4>\n            <div className=\"mini_user_card\">\n              <div className=\"image\"></div>\n              <div>\n                <h6>Abiodun Mayowa</h6>\n              </div>\n              <button className=\"btn btn-follow\">\n                <User size={12} /> Follow\n              </button>\n            </div>\n          </div>\n          <div className=\"card\">\n            <h4>\n              <Calendar size={12} /> Upcoming Events\n            </h4>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Calendar size={174} />\n            </div>\n            <p style={{ textAlign: 'center' }}>No Events Found!!</p>\n          </div>\n          <div className=\"card\">\n            <h4> Categories</h4>\n            <div className=\"sidebarcats\">\n              <div className=\"cats\">Family</div>\n              <div className=\"cats\">Politics</div>\n              <div className=\"cats\">Jobs</div>\n              <div className=\"cats\">Family</div>\n            </div>\n          </div>\n        </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/error.3d0d5212.png\";","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport HttpServices from '../Utils/HttpServices'\nimport { Endpoints } from '../Utils/Constant'\nimport PageLoader from '../Components/MiniComponents/PageLoader'\nimport { CheckCircle, XCircle } from 'react-feather'\n\nimport image_ from '../Components/images/error.png'\n\nexport default function Verification() {\n  const { code } = useParams()\n  const [response, setResponse] = useState('')\n  const [status, setStatus] = useState('')\n  const [verifying, setVerification] = useState(true)\n\n  const call = async () => {\n    let request = new HttpServices(`${Endpoints.VERIFICATION}/${code}`)\n    let res = await request.get()\n    setResponse(res.message)\n    setStatus(res.status)\n    setVerification(false)\n  }\n\n  useEffect(() => {\n    call()\n  }, [])\n\n  if (verifying) return <PageLoader />\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-6\">\n            <div className=\"verification_screen\">\n              <div>\n                {status === 'failed' ? (\n                  <XCircle color=\"red\" size={94} />\n                ) : (\n                  <CheckCircle size={94} />\n                )}\n              </div>\n              <h3>{response}</h3>\n              {status === 'success' && (\n                <Link to=\"/login\">Login to get started!</Link>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src={image_} alt=\"\" srcset=\"\" />\n          </div>\n          <div className=\"col-md-4\">\n            {!code && (\n              <div>\n                <p>Invalid Code</p>\n                {code}\n              </div>\n            )}\n\n            {!response ? (\n              <h4>Verifying Your Account! Please Wait!!</h4>\n            ) : (\n              <div>\n                <h4 style={{ textAlign: 'center' }}>{response}</h4>\n              </div>\n            )}\n          </div>\n        </div> */}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport HttpServices from '../Utils/HttpServices'\nimport { Endpoints } from '../Utils/Constant'\nimport { User } from 'react-feather'\nimport PageLoader from './MiniComponents/PageLoader'\n\nexport default function UpdateProfileImage() {\n  const [file, setFile] = useState('')\n  const [_image, setImage] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [notification, setNotification] = useState('')\n\n  const fetchOnlyImage = async () => {\n    let request = new HttpServices(Endpoints.FETCH_ONLY_IMAGE)\n    let response = await request.getWithCred()\n    if (response.status === 'success') setImage(response.data.profileImg)\n    setLoading(false)\n  }\n\n  const updateProfileImage = async (e) => {\n    e.preventDefault()\n    setNotification('Updating Profile Image!')\n\n    if (!_image) {\n      setNotification('No Image Selected!')\n      return\n    }\n    let request = new HttpServices(Endpoints.UPDATE_ONLY_IMAGE)\n    await request.post({ profileImg: file })\n    setNotification('Updated Successfully!')\n  }\n\n  useEffect(() => {\n    fetchOnlyImage()\n  }, [])\n\n  if (loading) return <PageLoader />\n\n  const convertImgToString = (e) => {\n    let image = e.target.files[0]\n    console.log(image)\n\n    if (!image) {\n      setFile('')\n      return\n    }\n\n    let reader = new FileReader()\n    reader.readAsDataURL(image)\n    // console.log(' reader :', reader)\n\n    reader.onload = function () {\n      setFile(reader.result)\n    }\n\n    reader.onerror = function () {\n      console.log(reader.error)\n    }\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-4 bg-white p-3\">\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <h5 className=\"text-center\">Update Profile Image</h5>\n              <hr />\n              <div className=\"card1 card_responsive\">\n                <div className=\"image image_lg\">\n                  <div>\n                    {_image ? (\n                      //   <img src={_image} width={200} height={200} />\n                      <div\n                        style={{\n                          backgroundImage: `url(${_image})`,\n                          width: 200,\n                          height: 200,\n                          backgroundRepeat: 'no-repeat',\n                          backgroundPosition: 'center',\n                          backgroundSize: 'cover',\n                          borderRadius: 50,\n                        }}\n                      ></div>\n                    ) : (\n                      <User size={50} />\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <form\n                action=\"\"\n                onSubmit={updateProfileImage}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <label htmlFor=\"\" className=\"mb-3\">\n                  Upload Your Image :\n                </label>\n                <input\n                  type=\"file\"\n                  onChange={convertImgToString}\n                  className=\"mb-3 p-1 border border-secondary\"\n                  required\n                />\n                {notification && (\n                  <div className=\"alert alert-secondary text-center\">\n                    {notification}\n                  </div>\n                )}\n                <button className=\"btn btn-lg btn-success\">\n                  Submit New Image\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Switch, Route } from 'react-router'\nimport Wrapper from './Components/Home/Wrapper'\nimport Landing from './Components/Home/Landing'\nimport Post from './Components/Home/Post'\nimport Login from './Components/Home/Login'\nimport Register from './Components/Home/Register'\nimport MyAccount from './Components/Home/MyAccount'\nimport Notification from './Components/Notifications'\nimport Discover from './Components/Discover'\nimport PostReply from './Components/Home/PostReply'\nimport CreatePost from './Components/CreatePost'\nimport Inbox from './Components/Inbox'\nimport UpdateProfile from './Components/UpdateProfile'\nimport Profile from './Components/Profile'\nimport Category from './Components/Category'\nimport Verification from './Components/Verification'\nimport UpdateProfileImage from './Components/UpdateProfileImage'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/update-profile-image\">\n        <Wrapper component={UpdateProfileImage} />\n      </Route>\n      <Route path=\"/category/:category\">\n        <Wrapper component={Category} />\n      </Route>\n      <Route path=\"/profile/:username\">\n        <Wrapper component={Profile} />\n      </Route>\n      <Route path=\"/update-profile\">\n        <Wrapper component={UpdateProfile} />\n      </Route>\n      <Route path=\"/inbox\">\n        <Wrapper component={Inbox} />\n      </Route>\n      <Route path=\"/new-post\">\n        <Wrapper component={CreatePost} />\n      </Route>\n      <Route path=\"/discover\">\n        <Wrapper component={Discover} />\n      </Route>\n      <Route path=\"/notification\">\n        <Wrapper component={Notification} />\n      </Route>\n      <Route path=\"/my-account\">\n        <Wrapper component={MyAccount} />\n      </Route>\n      <Route path=\"/register\">\n        <Wrapper component={Register} />\n      </Route>\n      <Route path=\"/login\">\n        <Wrapper component={Login} />\n      </Route>\n      <Route path=\"/verify-account/:code\">\n        <Wrapper component={Verification} />\n      </Route>\n      <Route path=\"/:slug\">\n        <Wrapper component={Post} />\n      </Route>\n      <Route path=\"/\">\n        <Wrapper component={Landing} />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}